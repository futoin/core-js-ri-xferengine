
=== 0.9.3 (2017-12-15) ===
FIXED: DB schema to be compatible with strict MySQL 5.7+

=== 0.9.2 (2017-12-15) ===
FIXED: to remove SUPER privilege requirement for MySQL @changesets
NEW: extended XferCCM with easy registration API

=== 0.9.1 (2017-12-04) ===
NEW: implemented XferCCM dynamic peer support

=== 0.9.0 (2017-12-03) ===
BREAKING CHANGE: rejection reason support (cancel* interface change)
BREAKING CHANGE: auto-disable of holder on "limithit" & "failure" limits hit (original design)
FIXED: xfer fee balance decrease time with WaitUser state
FIXED: xfer fee processing on cancel
NEW: full Retail domain support
NEW: AmountTools.isLess()/isLessOrEqual()/isGreater()/isGreaterOrEqual()
NEW: futoin.xfer.generic implementation
NEW: futoin.xfer.message face/service support

=== 0.8.1 (2017-11-29) ===
FIXED: to add ACCT_BAL events for bonus-related operations
FIXED: "pre-flight" locking of accounts involved in transaction to avoid deadlocks

=== 0.8.0 (2017-11-27) ===
BREAKING CHANGE: added round_id to Gaming interface
BREAKING CHANGE: dropped "active_" DB table prefix (requires manual change)
FIXED: to disallow cancelBet after wins
FIXED: to properly return actual game balance
FIXED: license disclaimers
CHANGED: ACCT_BAL to record formatted amounts, event field name change:
    * raw_balance -> balance
    * raw_reserved -> reserved
NEW: added BonusService operations
NEW: active_reservations table for pre-auth xfers
NEW: Bonus amount support in xfers

=== 0.7.0 (2017-11-22) ===
CHANGED: Harmonized UnknownAccountHolder/UnknownHolderID errors
NEW: Gaming xfer domain support

=== 0.6.0 (2017-11-19) ===
BREAKING CHANGE: deposit(withdrawal) source(sink) now obey outbound(inbound) Payments domain limits
 - Applies to transactions done through futoin.xfer.deposit & futoin.xfer.withdraw ifaces
 - Original behavior is kept when XferTools are used directly
BREAKING CHANGE: user confirmation is not processed on inbound transactions of any limit domain
BREAKING CHANGE: startWithdraw requires ext_id & ext_info to avoid double xfers even in manual processing
FIXED: Deposit transit-out to use "futoin.xfers.deposit:onDeposit" interface instead of default peer
FIXED: to process user confirmation also for transit sources
FIXED: to more safely handle limits on cancel
FIXED: to process inbound/outbound limits for External accounts
CHANGED: to record do_check/do_risk in misc_data
CHANGED: to re-read transit xfers instead of "guessing" its state
CHANGED: not to optimize out chained balance increase/decrease operations for extra safety
NEW: Payments domain processing frontend
NEW: Full support for XFER_ERR and XFER_EXTERR events

=== 0.5.0 (2017-11-17) ===
Initial release

